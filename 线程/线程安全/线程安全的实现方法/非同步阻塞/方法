  互斥同步面临的主要问题时进行线程阻塞和唤醒所带来的性能开销，因此这种同步也被称为阻塞同步（Blocking Synchronized）。从解决问题的角度来看，互斥同步是一种悲观的并发策略，无论共享的数据
是否真的会出现竞争，都会进行加锁。
  随着硬件指令集的发展，出现了另一种选择，基于冲突检测的乐观并发策略，通俗地说就是不管风险，先进行操作，发生了冲突，再进行补偿，最常用的补偿就是不断重试，直到出现没有竞争的数据为止。
使用这种乐观并发策略不再需要线程阻塞挂起，因此这种同步操作被称为非阻塞同步（Non-Blocking Synchronized）。
  在进行操作和冲突检测时这个步骤要保证原子性，硬件可以只通过一条处理器指令就能完成，这类指令常用的有：
    测试并设置（Test and Set）;
    获取并增加（Fetch and Increment）;
    交换（Swap）;
    比较并交换（Compare adn Swap，简称CAS)；
    加载链接/条件存储（Load-Linked/Store-Conditional，简称LL/SC）
