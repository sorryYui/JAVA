  当多个线程同时访问一个对象时，如果不用考虑这些线程在运行时环境下的调度和交替执行，也不需要进行额外的同步，或者在调用方进行任何其他的协调操作，调用这个对象的行为都可以获得正确的
结果，那就称这个对象是线程安全的。
  这个定义是很严谨且有可操作性，它要求线程安全的代码都必须具备一个共同特征：代码本身封装了所有必要的正确性保障手段（互斥、同步等），令调用者无须关心多线程下的调用问题，更无须自己
实现任何措施来保证多线程环境下的正确调用。
  我们可以不把线程安全当作一个非真即假的二元排他选项来看待，而是按照线程安全的“安全程度”由强至弱来排序，将Java中各操作共享的数据分为以下五类：不可变、绝对线程安全、相对相对安全、
线程兼容和线程对立。
